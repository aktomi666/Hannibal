apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.hannibal.hannibal'
version = '0.0.1'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
}

task makeJar(type: Copy){
    //delete('../app/libs/hannibal-debug.jar')
    from('build/intermediates/intermediate-jars/debug')
    into('../app/libs')
    include('classes.jar')
    rename('classes.jar','hannibal-debug.jar')
}

makeJar.dependsOn(build)


task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    //使用android.getBootClasspath关联Android SDK类文件
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    source = 'src/main/java'
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier'javadoc'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

bintray {
    user = 'magicbaby810' //在个人中心的路径里可以找到
    key = 'f1cc8626b3d032eaf7828924f56e80e46dd78a27' //上述保存的API key
    pkg {
        repo = 'Hannibal' //必须设定一个值，这里选择maven
        name = 'com.hannibal.scalpel' //必须，包名
        version {
            name = '0.0.1' //版本名称
            desc = 'My test upload' //版本描述
            released = new Date() //上传过程中如果此处报错，可以注释掉此句
            vcsTag = '0.0.1' //版本
        }
        licenses = ['Apache-2.0'] //开源协议
        vcsUrl = '' //指定项目git地址
        websiteUrl = '' //项目官网地址
    }
    configurations = ['archives'] //必须为archives
}