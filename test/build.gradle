apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


//apply plugin: 'hannibal'
//import com.hannibal.gradle.utils.MethodLogAdapter
//import org.objectweb.asm.ClassVisitor
//import org.objectweb.asm.MethodVisitor
//import org.objectweb.asm.Opcodes
////import org.objectweb.asm.*
//
//hannibal {
//    //下面这个参数仅仅影响log输出，为本次修改命名，无实际意义，不配置也可以
//    hannibalModifyName = 'HannibalTest'
//    //设置为true可以显示帮助内容，默认为true
//    showHelp = true
//    //keepQuiet默认为false,为true时不会有字节码修改的log输出，建议为false
//    keepQuiet = false
//    //下面的参数设置为true时会输出工程编译耗时信息
//    watchTimeConsume = false
//
//    //this is the most important part
//    modifyMatchMaps = [
//            '*Activity|*Receiver|!android*': [
//                    ['methodName': 'on**', 'methodDesc': '(Landroid/view/View;)V', 'adapter': {
//                        ClassVisitor cv, int access, String name, String desc, String signature, String[] exceptions ->
//                            MethodVisitor methodVisitor = cv.visitMethod(access, name, desc, signature, exceptions);
//                            MethodVisitor adapter = new MethodLogAdapter(methodVisitor) {
//                                @Override
//                                void visitCode() {
//                                    super.visitCode();
//                                    methodVisitor.visitVarInsn(25, 0);
//                                    methodVisitor.visitVarInsn(25, 1);
//                                    //methodVisitor.visitLdcInsn(desc);
//                                    methodVisitor.visitLdcInsn(name);
//                                    //下面这行代码 为要调用的方法，请酌情修改
//                                    methodVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,
//                                            "com/hannibal/scalpel/task/PickOutTask",
//                                            "hookOnEvents", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V", false);
////                                    methodVisitor.visitVarInsn(25, 1);
////                                    //下面这行代码 为要调用的方法，请酌情修改
////                                    methodVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,
////                                                        "com/hannibal/scalpel/task/PickOutTask",
////                                                        "hookOnEvents",
////                                                        "(Landroid/os/Bundle;)V",
////                                                        false);
//                                }
//                            }
//                            return adapter;
//                    }]
//            ]
////            ,
////            '*MainActivity': [
////                    ['methodName': 'onClick', 'methodDesc': null, 'adapter': {
////                        ClassVisitor cv, int access, String name, String desc, String signature, String[] exceptions ->
////                            MethodVisitor methodVisitor = cv.visitMethod(access, name, desc, signature, exceptions);
////                            MethodVisitor adapter = new MethodLogAdapter(methodVisitor) {
////                                @Override
////                                void visitCode() {
////                                    super.visitCode();
////                                    //methodVisitor.visitLdcInsn(desc);
////                                    methodVisitor.visitVarInsn(25, 1);
////                                    methodVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,
////                                                        "com/hannibal/scalpel/task/PickOutTask",
////                                                        "hookClickEvents",
////                                                        "(Landroid/view/View;)V",
////                                                        false);
////                                }
////                            }
////                            return adapter;
////                    }]
////            ]
//    ]
//}
